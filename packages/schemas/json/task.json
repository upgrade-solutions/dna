{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://dna.codes/schemas/task.json",
  "title": "Task Schema",
  "description": "Defines a task â€” a specific work item within a project that contributes to achieving the project's objectives.",
  "examples": [
    {
      "id": "task-analyze-current-process",
      "name": "Analyze Current Income Verification Process",
      "key": "analyzeCurrentIncomeProcess",
      "type": "Task",
      "description": "Document and analyze the existing manual income verification process to identify bottlenecks and improvement opportunities",
      "project": "borrower-onboarding-improvement",
      "category": "analysis",
      "status": "completed",
      "priority": "high",
      "assignee": "business-analyst-lending",
      "estimatedHours": 16,
      "actualHours": 14,
      "timeline": {
        "startDate": "2025-09-01",
        "dueDate": "2025-09-10",
        "completedDate": "2025-09-08"
      },
      "dependencies": [],
      "deliverables": [
        "current-process-documentation",
        "bottleneck-analysis-report",
        "improvement-recommendations"
      ],
      "acceptance_criteria": [
        "Complete process flow diagram created",
        "All stakeholders interviewed",
        "Performance metrics documented",
        "At least 3 improvement opportunities identified"
      ]
    },
    {
      "id": "task-design-automated-verification",
      "name": "Design Automated Income Verification System",
      "key": "designAutomatedVerification",
      "type": "Task",
      "description": "Design the technical architecture and integration points for automated income verification using bank data APIs",
      "project": "borrower-onboarding-improvement",
      "category": "design",
      "status": "in-progress",
      "priority": "high",
      "assignee": "senior-developer-backend",
      "estimatedHours": 32,
      "actualHours": 18,
      "timeline": {
        "startDate": "2025-09-11",
        "dueDate": "2025-09-25"
      },
      "dependencies": ["task-analyze-current-process"],
      "subtasks": [
        "research-bank-api-providers",
        "design-data-flow-architecture",
        "create-security-requirements",
        "design-fallback-mechanisms"
      ],
      "deliverables": [
        "technical-architecture-document",
        "api-integration-specifications",
        "security-requirements-document",
        "prototype-wireframes"
      ],
      "acceptance_criteria": [
        "Architecture review completed and approved",
        "Security requirements validated by compliance team",
        "Performance requirements defined",
        "Integration points clearly documented"
      ],
      "tags": ["backend", "integration", "security"],
      "notes": [
        {
          "date": "2025-09-15",
          "author": "senior-developer-backend",
          "content": "Identified Plaid and Yodlee as primary API candidates. Need to review compliance requirements."
        }
      ]
    },
    {
      "id": "task-implement-risk-assessment",
      "name": "Implement AI Risk Assessment Step",
      "key": "implementRiskAssessment",
      "type": "Task",
      "description": "Develop and integrate the new AI-powered risk assessment step into the loan application workflow",
      "project": "borrower-onboarding-improvement",
      "category": "development",
      "status": "planned",
      "priority": "medium",
      "assignee": "ml-engineer-risk",
      "estimatedHours": 40,
      "timeline": {
        "startDate": "2025-10-01",
        "dueDate": "2025-10-20"
      },
      "dependencies": ["task-design-automated-verification"],
      "deliverables": [
        "risk-assessment-algorithm",
        "model-training-pipeline",
        "integration-endpoints",
        "monitoring-dashboard"
      ],
      "acceptance_criteria": [
        "Model achieves 85% accuracy on test dataset",
        "Response time under 2 seconds",
        "Proper error handling and fallback logic",
        "Monitoring and alerting configured"
      ],
      "risks": [
        {
          "description": "Model training data may be insufficient",
          "mitigation": "Prepare synthetic data generation as backup"
        }
      ]
    }
  ],
  "allOf": [
    { "$ref": "https://dna.codes/schemas/base.json" },
    {
      "type": "object",
      "properties": {
        "type": {
          "const": "Task"
        },
        "project": {
          "type": "string",
          "description": "Reference to the project this task belongs to"
        },
        "category": {
          "type": "string",
          "enum": ["analysis", "design", "development", "testing", "documentation", "research", "review", "deployment", "maintenance"],
          "description": "Category of work this task represents"
        },
        "status": {
          "type": "string",
          "enum": ["planned", "in-progress", "blocked", "review", "completed", "cancelled"],
          "description": "Current status of the task",
          "default": "planned"
        },
        "priority": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"],
          "description": "Priority level of the task",
          "default": "medium"
        },
        "assignee": {
          "type": "string",
          "description": "Reference to the actor assigned to this task"
        },
        "estimatedHours": {
          "type": "number",
          "description": "Estimated effort in hours to complete the task",
          "minimum": 0
        },
        "actualHours": {
          "type": "number",
          "description": "Actual hours spent on the task",
          "minimum": 0
        },
        "timeline": {
          "type": "object",
          "description": "Task timeline and dates",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "description": "Task start date"
            },
            "dueDate": {
              "type": "string",
              "format": "date",
              "description": "Task due date"
            },
            "completedDate": {
              "type": "string",
              "format": "date",
              "description": "Actual completion date (when completed)"
            }
          }
        },
        "dependencies": {
          "type": "array",
          "description": "Other tasks that must be completed before this task can start",
          "items": {
            "type": "string",
            "description": "Reference to a task ID or key"
          }
        },
        "subtasks": {
          "type": "array",
          "description": "Smaller work items within this task",
          "items": {
            "oneOf": [
              {
                "type": "string",
                "description": "Reference to a subtask by ID or simple description"
              },
              {
                "$ref": "https://dna.codes/schemas/task.json"
              }
            ]
          }
        },
        "deliverables": {
          "type": "array",
          "description": "Expected outputs or artifacts from this task",
          "items": {
            "type": "string",
            "description": "Deliverable name or identifier"
          }
        },
        "acceptance_criteria": {
          "type": "array",
          "description": "Criteria that must be met for the task to be considered complete",
          "items": {
            "type": "string",
            "description": "Acceptance criterion"
          }
        },
        "tags": {
          "type": "array",
          "description": "Labels for categorizing and searching tasks",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "type": "array",
          "description": "Progress notes and updates",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date",
                "description": "Date of the note"
              },
              "author": {
                "type": "string",
                "description": "Author of the note (actor reference)"
              },
              "content": {
                "type": "string",
                "description": "Note content"
              }
            },
            "required": ["date", "author", "content"]
          }
        },
        "risks": {
          "type": "array",
          "description": "Task-specific risks and mitigation strategies",
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the risk"
              },
              "impact": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"],
                "description": "Potential impact if risk occurs"
              },
              "probability": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "description": "Probability of risk occurring"
              },
              "mitigation": {
                "type": "string",
                "description": "Mitigation strategy for the risk"
              }
            },
            "required": ["description", "mitigation"]
          }
        },
        "blockers": {
          "type": "array",
          "description": "Current blockers preventing task progress",
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the blocker"
              },
              "blockedSince": {
                "type": "string",
                "format": "date",
                "description": "Date when the blocker was identified"
              },
              "owner": {
                "type": "string",
                "description": "Actor responsible for resolving the blocker"
              },
              "resolution": {
                "type": "string",
                "description": "Proposed resolution or action plan"
              }
            },
            "required": ["description", "blockedSince"]
          }
        },
        "effort_tracking": {
          "type": "object",
          "description": "Detailed effort tracking information",
          "properties": {
            "timeEntries": {
              "type": "array",
              "description": "Individual time entries for the task",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of work"
                  },
                  "hours": {
                    "type": "number",
                    "description": "Hours worked",
                    "minimum": 0
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of work performed"
                  },
                  "actor": {
                    "type": "string",
                    "description": "Actor who performed the work"
                  }
                },
                "required": ["date", "hours", "actor"]
              }
            },
            "percentComplete": {
              "type": "number",
              "description": "Estimated percentage completion (0-100)",
              "minimum": 0,
              "maximum": 100
            }
          }
        }
      },
      "required": ["project", "category", "status", "assignee"]
    }
  ]
}